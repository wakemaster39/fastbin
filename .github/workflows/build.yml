---
name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: poetry install
        run: poetry install
      - name: pytest
        run: poetry run python -m pytest --cov ./src --cov-report term-missing

  linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: poetry install
        run: poetry install
      - name: Run iSort
        if: ${{ always() }}
        run: poetry run isort -v -c .
      - name: Run Black
        if: ${{ always() }}
        run: poetry run black --check -v .
      - name: Run Flake8
        if: ${{ always() }}
        run: poetry run flake8 -v .
      - name: Run MyPy
        if: ${{ always() }}
        run: poetry run mypy ./src ./tests

  pytest-matrix:
    needs:
      - pytest
      - linting
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9.0-beta.4]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: poetry install
        run: poetry install
      - name: pytest
        run: poetry run python -m pytest --cov ./src --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
